// JS RESET SHOWROOM - T√ÅCH RI√äNG C√ÅC H√ÄM & G·ªåI LOAD

// üëâ N·ªôi dung cho c√°c modal
const benefitModalContent = {
    'Gi·ªØ xe mi·ªÖn ph√≠': {
        title: 'Gi·ªØ xe mi·ªÖn ph√≠',
        description: 'T·∫°i 3TD SHOP, ch√∫ng t√¥i cung c·∫•p d·ªãch v·ª• gi·ªØ xe ho√†n to√†n mi·ªÖn ph√≠ cho kh√°ch h√†ng. B·∫°n c√≥ th·ªÉ y√™n t√¢m ƒë·ªÉ xe an to√†n trong b√£i ƒë·ªó r·ªông r√£i, ƒë∆∞·ª£c gi√°m s√°t 24/7, gi√∫p b·∫°n tho·∫£i m√°i tr·∫£i nghi·ªám mua s·∫Øm m√† kh√¥ng lo l·∫Øng v·ªÅ ph∆∞∆°ng ti·ªán c·ªßa m√¨nh.'
    },
    'Wifi mi·ªÖn ph√≠': {
        title: 'Wifi mi·ªÖn ph√≠',
        description: 'K·∫øt n·ªëi kh√¥ng gi·ªõi h·∫°n v·ªõi Wifi t·ªëc ƒë·ªô cao mi·ªÖn ph√≠ t·∫°i t·∫•t c·∫£ c√°c showroom 3TD SHOP. D√π b·∫°n mu·ªën ki·ªÉm tra th√¥ng tin s·∫£n ph·∫©m, chia s·∫ª tr·∫£i nghi·ªám hay l∆∞·ªõt web, ch√∫ng t√¥i ƒë·∫£m b·∫£o b·∫°n lu√¥n ƒë∆∞·ª£c k·∫øt n·ªëi m∆∞·ª£t m√†.'
    },
    'Tr·∫£i nghi·ªám s·∫£n ph·∫©m mi·ªÖn ph√≠': {
        title: 'Tr·∫£i nghi·ªám s·∫£n ph·∫©m mi·ªÖn ph√≠',
        description: 'H√£y t·ª± tay kh√°m ph√° nh·ªØng s·∫£n ph·∫©m c√¥ng ngh·ªá ƒë·ªânh cao t·∫°i showroom! 3TD SHOP cung c·∫•p kh√¥ng gian tr·∫£i nghi·ªám mi·ªÖn ph√≠, n∆°i b·∫°n c√≥ th·ªÉ th·ª≠ nghi·ªám c√°c thi·∫øt b·ªã tr∆∞·ªõc khi quy·∫øt ƒë·ªãnh mua, ƒë·∫£m b·∫£o s·ª± h√†i l√≤ng tuy·ªát ƒë·ªëi.'
    },
    'T∆∞ v·∫•n chuy√™n s√¢u': {
        title: 'T∆∞ v·∫•n chuy√™n s√¢u',
        description: 'ƒê·ªôi ng≈© chuy√™n vi√™n c·ªßa 3TD SHOP lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n v·ªõi ki·∫øn th·ª©c chuy√™n m√¥n s√¢u r·ªông. T·ª´ vi·ªác ch·ªçn s·∫£n ph·∫©m ph√π h·ª£p ƒë·∫øn gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc, ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn tr·∫£i nghi·ªám t∆∞ v·∫•n c√° nh√¢n h√≥a v√† t·∫≠n t√¢m.'
    },
    'S·∫£n ph·∫©m ch√≠nh h√£ng 100%': {
        title: 'S·∫£n ph·∫©m ch√≠nh h√£ng 100%',
        description: 'M·ªçi s·∫£n ph·∫©m t·∫°i 3TD SHOP ƒë·ªÅu ƒë∆∞·ª£c cam k·∫øt ch√≠nh h√£ng 100%, ƒëi k√®m b·∫£o h√†nh ƒë·∫ßy ƒë·ªß t·ª´ nh√† s·∫£n xu·∫•t. Mua s·∫Øm v·ªõi s·ª± an t√¢m, ch·∫•t l∆∞·ª£ng v√† uy t√≠n lu√¥n l√† ∆∞u ti√™n h√†ng ƒë·∫ßu c·ªßa ch√∫ng t√¥i.'
    },
    'Ch√≠nh s√°ch tr·∫£ g√≥p': {
        title: 'Ch√≠nh s√°ch tr·∫£ g√≥p',
        description: 'S·ªü h·ªØu s·∫£n ph·∫©m m∆° ∆∞·ªõc ch∆∞a bao gi·ªù d·ªÖ d√†ng ƒë·∫øn th·∫ø! V·ªõi ch√≠nh s√°ch tr·∫£ g√≥p linh ho·∫°t, l√£i su·∫•t h·∫•p d·∫´n v√† th·ªß t·ª•c ƒë∆°n gi·∫£n, 3TD SHOP gi√∫p b·∫°n s·ªü h·ªØu c√¥ng ngh·ªá ƒë·ªânh cao m√† kh√¥ng lo g√°nh n·∫∑ng t√†i ch√≠nh.'
    },
    'Thanh to√°n d·ªÖ d√†ng': {
        title: 'Thanh to√°n d·ªÖ d√†ng',
        description: 'Ch√∫ng t√¥i h·ªó tr·ª£ nhi·ªÅu ph∆∞∆°ng th·ª©c thanh to√°n ti·ªán l·ª£i nh∆∞ ti·ªÅn m·∫∑t, th·∫ª ng√¢n h√†ng, v√≠ ƒëi·ªán t·ª≠ v√† chuy·ªÉn kho·∫£n. Quy tr√¨nh thanh to√°n nhanh ch√≥ng, an to√†n, gi√∫p b·∫°n ti·∫øt ki·ªám th·ªùi gian v√† t·∫≠n h∆∞·ªüng tr·∫£i nghi·ªám mua s·∫Øm m∆∞·ª£t m√†.'
    },
    'Giao h√†ng t·∫≠n nh√†': {
        title: 'Giao h√†ng t·∫≠n nh√†',
        description: 'Kh√¥ng c·∫ßn ƒë·∫øn showroom, 3TD SHOP mang s·∫£n ph·∫©m ƒë·∫øn t·∫≠n c·ª≠a nh√† b·∫°n! D·ªãch v·ª• giao h√†ng nhanh ch√≥ng, an to√†n v√† ƒë√∫ng h·∫πn, ƒë·∫£m b·∫£o s·∫£n ph·∫©m ƒë·∫øn tay b·∫°n trong t√¨nh tr·∫°ng ho√†n h·∫£o.'
    }
};

// üëâ T·∫°o v√† hi·ªÉn th·ªã modal
function showBenefitModal(benefitText) {
    const content = benefitModalContent[benefitText];
    if (!content) return;

    // T·∫°o modal
    const modal = $(`
        <div class="modal fade" id="benefitModal" tabindex="-1" aria-labelledby="benefitModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: linear-gradient(135deg, #1a1a2e, #16213e); color: #fff; border-radius: 12px;">
                    <div class="modal-header" style="border-bottom: 1px solid #00f2ff;">
                        <h5 class="modal-title" id="benefitModalLabel">${content.title}</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" style="font-size: 1.1rem; line-height: 1.6;">
                        ${content.description}
                    </div>
                </div>
            </div>
        </div>
    `);

    // Th√™m modal v√†o body
    $('body').append(modal);

    // Hi·ªÉn th·ªã modal
    modal.modal('show');

    // X√≥a modal sau khi ƒë√≥ng ƒë·ªÉ tr√°nh t√≠ch l≈©y
    modal.on('hidden.bs.modal', function () {
        modal.remove();
    });
}

// üëâ Hi·ªáu ·ª©ng particles n·ªïi
function createParticle() {
    const particle = $('<div class="particle"></div>');
    particle.css({
        position: 'fixed',
        width: '2px',
        height: '2px',
        background: '#00f2ff',
        left: Math.random() * window.innerWidth + 'px',
        top: window.innerHeight + 'px',
        'pointer-events': 'none',
        'z-index': '1',
        'box-shadow': '0 0 10px #00f2ff'
    });

    $('body').append(particle);

    particle.animate({
        top: '-10px',
        left: '+=' + (Math.random() * 200 - 100) + 'px'
    }, {
        duration: 8000,
        easing: 'linear',
        complete: function() {
            particle.remove();
        }
    });
}

function initParticles() {
    setInterval(createParticle, 3000);
}

// üëâ Hi·ªáu ·ª©ng hover/click tr√™n benefit items
function initBenefitItemEffects() {
    $('.benefit-item').hover(
        function() {
            $(this).addClass('benefit-hover');
        },
        function() {
            $(this).removeClass('benefit-hover');
        }
    );

    $('.benefit-item').click(function() {
        $(this).addClass('benefit-clicked');
        setTimeout(() => {
            $(this).removeClass('benefit-clicked');
        }, 200);

        // L·∫•y n·ªôi dung c·ªßa benefit-item ƒë·ªÉ hi·ªÉn th·ªã modal
        const benefitText = $(this).find('div').text().trim();
        showBenefitModal(benefitText);
    });
}

// üëâ Hi·ªáu ·ª©ng animation khi cu·ªôn t·ªõi ti·ªán √≠ch showroom
function initIntersectionObserver() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animationPlayState = 'running';
            }
        });
    }, observerOptions);

    $('.benefit-item').each(function() {
        observer.observe(this);
    });
}

// üëâ G·ªçi khi b·∫•m n√∫t "Ch·ªâ ƒë∆∞·ªùng" ƒë·ªÉ hi·ªán iframe b·∫£n ƒë·ªì
function initMapToggleLogic() {
    $('.navigation-toggle-btn').click(function () {
        const $storeCard = $(this).closest('.store-card');
        const $map = $storeCard.find('.map-frame');

        $map.slideToggle(300);
    });
}

// üëâ N√∫t "Xem b·∫£n ƒë·ªì" - ch·ªâ ƒë·ªÉ click feedback, kh√¥ng m·ªü iframe
function initNavigationButtonLogic() {
    $('.navigation-btn').click(function() {
        const storeName = $(this).closest('.store-card').find('.store-name').text().trim();
        console.log('Navigate to:', storeName);

        $(this).addClass('clicked');
        setTimeout(() => {
            $(this).removeClass('clicked');
        }, 300);
    });
}

// üëâ Hotline g·ªçi nhanh
function initHotlineLogic() {
    $('.hotline-btn').click(function(e) {
        e.preventDefault();
        $(this).addClass('animate__pulse');
        setTimeout(() => {
            $(this).removeClass('animate__pulse');
            window.location.href = 'contact.html';
        }, 200);
    });
}

// üëâ Hi·ªáu ·ª©ng delay animation t·ª´ng store-card
function initStoreCardAnimations() {
    $('.store-card').each(function(index) {
        $(this).css('animation-delay', (index * 0.2) + 's');
    });
}
async function loadPagePart(url, containerId, callback = null) {
    try {
        const response = await fetch(url);
        const html = await response.text();
        $(`#${containerId}`).html(html);

        const $tempDiv = $('<div>').html(html);
        $tempDiv.find('script').each(function () {
            const src = $(this).attr('src');
            if (src && $(`script[src="${src}"]`).length) return;
            const $newScript = $('<script>');
            if (src) $newScript.attr('src', src);
            else $newScript.text($(this).text());
            $('body').append($newScript);
        });

        if (typeof callback === 'function') callback();
    } catch (error) {
        console.error(`L·ªói khi t·∫£i ${url}:`, error);
    }
}
// üìå MAIN LOADER
function initShowroomPage() {
    initParticles();
    initBenefitItemEffects();
    initIntersectionObserver();
    initHotlineLogic();
    initNavigationButtonLogic();
    initMapToggleLogic();
    initStoreCardAnimations();
}

// G·ªçi khi DOM s·∫µn s√†ng
$(function() {
    // Load header v√† footer
    loadPagePart("HTML/Layout/resetheader.html", "header-container", () => {
        if (typeof initHeader === 'function') initHeader();
    });
    loadPagePart("HTML/Layout/resetfooter.html", "footer-container");

    // G·ªçi c√°c h√†m showroom
    initShowroomPage();
});
